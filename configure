#!/bin/sh
set -e
HELP_MSG="Usage:
    --bin-dir=<directory to install binary>
      No trailing slash. If not supplied it will try \$HOME/.local/bin, if \$HOME is unset it will fail.
    --profile=<release|lto>
      Defaults to 'lto'
    --help
      Display this message
"
# So dumb it's understandable
for ARG in "$@"
do
  KEY="$(echo "$ARG" | cut -d '=' -f1)"
  VALUE="$(echo "$ARG" | cut -d '=' -f2)"
  if [ "$KEY" = "--bin-dir" ]; then
    DESTDIR="$VALUE"
  elif [ "$KEY" = "--profile" ]; then
    PROFILE="$VALUE"
  elif [ "$KEY" = "--help" ]; then
    printf "%s" "$HELP_MSG"
  else
    printf "%s" "$HELP_MSG"
  fi
done

# This too
if [ -z "$DESTDIR" ]; then
  if [ -n "$HOME" ]; then
    DESTDIR="$HOME/.local/bin"
  else
    echo "No DESTDIR supplied and HOME environment variable is not set for a fallback install directory"
    exit 1
  fi
fi
if [ -z "$PROFILE" ]; then
  PROFILE=lto
fi

# This is kind of a traversty though
printf "APP :=pgwm
DESTDIR :=%s
PROFILE :=%s
build:
\t@./build_wm.sh --profile=\$(PROFILE)
install:
\t@test -d \$(DESTDIR) || echo \"Install directory \$(DESTDIR) not found, will try to create it\"; mkdir -p \$(DESTDIR)
\t@install target/x86_64-unknown-linux-gnu/\$(PROFILE)/\$(APP) \$(DESTDIR)/\$(APP)
\t@echo \"Installed binary at \$(DESTDIR)/\$(APP)\"
CLEAN_CONFIG ?=
ifndef CLEAN_CONFIG
	CLEAN_CONFIG :=0
endif
uninstall:
	@if [ -f \$(DESTDIR)/pgwm ]; then \
  		rm \$(DESTDIR)/pgwm ;\
  fi; \

clean:
\t@cargo clean
help:
\t@echo \"usage: make \"
\t@echo \"       make install\"
\t@echo \"       make uninstall\"
\t@echo \"       make clean\"" "$DESTDIR" "$PROFILE" > Makefile
